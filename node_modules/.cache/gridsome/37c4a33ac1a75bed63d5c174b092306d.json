{"remainingRequest":"/Users/jwolff/Documents/dev/learning-vue/gridsome-wordpress/yo/vue-gridsome-graphql-wordpress/node_modules/babel-loader/lib/index.js??ref--1-1!/Users/jwolff/Documents/dev/learning-vue/gridsome-wordpress/yo/vue-gridsome-graphql-wordpress/node_modules/gridsome/app/components/Pager.js","dependencies":[{"path":"/Users/jwolff/Documents/dev/learning-vue/gridsome-wordpress/yo/vue-gridsome-graphql-wordpress/node_modules/gridsome/app/components/Pager.js","mtime":1564078520995},{"path":"/Users/jwolff/Documents/dev/learning-vue/gridsome-wordpress/yo/vue-gridsome-graphql-wordpress/node_modules/cache-loader/dist/cjs.js","mtime":1564078521043},{"path":"/Users/jwolff/Documents/dev/learning-vue/gridsome-wordpress/yo/vue-gridsome-graphql-wordpress/node_modules/babel-loader/lib/index.js","mtime":1564078521010}],"contextDependencies":[],"result":["import \"core-js/modules/es6.object.define-property\";\nimport \"core-js/modules/es6.object.define-properties\";\nimport \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/es6.array.filter\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.array.map\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport _defineProperty from \"/Users/jwolff/Documents/dev/learning-vue/gridsome-wordpress/yo/vue-gridsome-graphql-wordpress/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.number.constructor\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Link from \"./Link\";\nimport { unslashEnd, stripPageParam } from \"../utils/helpers\"; // @vue/component\n\nexport default {\n  functional: true,\n  props: {\n    info: {\n      type: Object,\n      required: true\n    },\n    showLinks: {\n      type: Boolean,\n      default: true\n    },\n    showNavigation: {\n      type: Boolean,\n      default: true\n    },\n    firstLabel: {\n      type: String,\n      default: '«'\n    },\n    prevLabel: {\n      type: String,\n      default: '‹'\n    },\n    nextLabel: {\n      type: String,\n      default: '›'\n    },\n    lastLabel: {\n      type: String,\n      default: '»'\n    },\n    linkClass: {\n      type: String,\n      default: ''\n    },\n    range: {\n      type: Number,\n      default: 5\n    },\n    activeLinkClass: {\n      type: String,\n      default: undefined\n    },\n    exactActiveLinkClass: {\n      type: String,\n      default: undefined\n    },\n    // accessibility\n    ariaLabel: {\n      type: String,\n      default: 'Pagination Navigation'\n    },\n    ariaLinkLabel: {\n      type: String,\n      default: 'Go to page %n'\n    },\n    ariaFirstLabel: {\n      type: String,\n      default: 'Go to first page'\n    },\n    ariaCurrentLabel: {\n      type: String,\n      default: 'Current page. Page %n'\n    },\n    ariaPrevLabel: {\n      type: String,\n      default: 'Go to previous page. Page %n'\n    },\n    ariaNextLabel: {\n      type: String,\n      default: 'Go to next page. Page %n'\n    },\n    ariaLastLabel: {\n      type: String,\n      default: 'Go to last page. Page %n'\n    }\n  },\n  render: function render(h, _ref) {\n    var props = _ref.props,\n        data = _ref.data,\n        parent = _ref.parent;\n    var info = props.info,\n        showLinks = props.showLinks,\n        showNavigation = props.showNavigation,\n        ariaLabel = props.ariaLabel;\n\n    var _resolveRange = resolveRange(info, props.range),\n        current = _resolveRange.current,\n        total = _resolveRange.total,\n        pages = _resolveRange.pages,\n        start = _resolveRange.start,\n        end = _resolveRange.end;\n\n    var currentPath = stripPageParam(parent.$route);\n\n    var renderLink = function renderLink(page) {\n      var text = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : page;\n      var ariaLabel = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : text;\n      if (page === current) ariaLabel = props.ariaCurrentLabel;\n      var linkProps = {\n        to: createPagePath(currentPath, page),\n        exact: true\n      };\n\n      if (props.activeLinkClass) {\n        linkProps.activeClass = props.activeLinkClass;\n      }\n\n      if (props.exactActiveLinkClass) {\n        linkProps.exactActiveClass = props.exactActiveLinkClass;\n      }\n\n      return h(Link, {\n        class: props.linkClass,\n        attrs: _objectSpread({}, linkProps, {\n          'aria-label': ariaLabel.replace('%n', page),\n          'aria-current': current === page\n        })\n      }, [text]);\n    };\n\n    var links = showLinks ? pages.map(function (page) {\n      return renderLink(page, page, props.ariaLinkLabel);\n    }) : []; // render first, prev, next and last links\n\n    if (showNavigation) {\n      var firstLabel = props.firstLabel,\n          prevLabel = props.prevLabel,\n          nextLabel = props.nextLabel,\n          lastLabel = props.lastLabel;\n      var ariaFirstLabel = props.ariaFirstLabel,\n          ariaPrevLabel = props.ariaPrevLabel,\n          ariaNextLabel = props.ariaNextLabel,\n          ariaLastLabel = props.ariaLastLabel;\n      if (current > 1) links.unshift(renderLink(current - 1, prevLabel, ariaPrevLabel));\n      if (start > 0) links.unshift(renderLink(1, firstLabel, ariaFirstLabel));\n      if (current < total) links.push(renderLink(current + 1, nextLabel, ariaNextLabel));\n      if (end < total) links.push(renderLink(total, lastLabel, ariaLastLabel));\n    }\n\n    if (links.length < 2) return null;\n    return h('nav', _objectSpread({}, data, {\n      attrs: {\n        'role': 'navigation',\n        'aria-label': ariaLabel\n      }\n    }), links);\n  }\n};\n\nfunction createPagePath(path, page) {\n  return page > 1 ? unslashEnd(path) + \"/\".concat(page) : path;\n}\n\nfunction resolveRange(_ref2, range) {\n  var _ref2$currentPage = _ref2.currentPage,\n      current = _ref2$currentPage === void 0 ? 1 : _ref2$currentPage,\n      _ref2$totalPages = _ref2.totalPages,\n      total = _ref2$totalPages === void 0 ? 1 : _ref2$totalPages;\n  var offset = Math.ceil(range / 2);\n  var start = Math.floor(current - offset);\n  var end = Math.floor(current + offset);\n\n  if (total <= range) {\n    start = 0;\n    end = total;\n  } else if (current <= offset) {\n    start = 0;\n    end = range;\n  } else if (current + offset >= total) {\n    start = total - range;\n    end = total;\n  }\n\n  var pages = [];\n\n  for (var page = start + 1; page <= end; page++) {\n    pages.push(page);\n  }\n\n  return {\n    current: current,\n    total: total,\n    start: start,\n    end: end,\n    pages: pages\n  };\n}",null]}